#!/bin/sh

# This script is MAC specific, it intents to create an internet deliverable
# disk image of a tulip MAC 'bundle' in the current directory
APP_DIR=Tulip-@PACKAGE_VERSION@.app

if [ -d $APP_DIR ]; then
  rm -rf $APP_DIR
fi

BIN_BUNDLE_DIR=$APP_DIR/Contents/MacOS
BIN_BUNDLE=$BIN_BUNDLE_DIR/tulip
LIBS_BUNDLE_DIR=$APP_DIR/Contents/Frameworks
RESOURCES_BUNDLE_DIR=$APP_DIR/Contents/Resources

# copy the tulip app installed in @prefix@/bin
echo installing $APP_DIR
cp -RL @prefix@/bin/tulip.app .
mv tulip.app $APP_DIR

# create the shared libs bundle directory
mkdir -p $LIBS_BUNDLE_DIR
# look for shared libs
SHARED_LIBS=`otool -L $BIN_BUNDLE | grep dylib | awk '{print $1}'`
# copy libs in shared libs bundle directory
for LIB in $SHARED_LIBS
do
  OLDLIB=$LIB
  if [ "$LIB" = "*System*" ]; then
   continue
  fi 
  if [ "$LIB" = "/usr/lib/libSystem.B.dylib" ]; then
   continue
  fi 
  if [ ! -f $LIB ]; then
    LIB=/usr/lib/$LIB
  fi
  if [ -f $LIB ]; then
    cp $LIB $LIBS_BUNDLE_DIR
    LIB=`basename $LIB`
    echo installing $LIBS_BUNDLE_DIR/$LIB
    # update the name of the current bundle lib
    install_name_tool -id @executable_path/../Frameworks/$LIB $LIBS_BUNDLE_DIR/$LIB
    # package tulip bundle binary with the current bundle lib
    install_name_tool -change $OLDLIB @executable_path/../Frameworks/$LIB $BIN_BUNDLE
  else
    echo `basename $LIB` not found... exiting
  fi
done

# copy Qt assistant application
ASSISTANT_BUNDLE_DIR=$APP_DIR/Contents/assistant.app
ASSISTANT_LIBS_BUNDLE_DIR=$ASSISTANT_BUNDLE_DIR/Contents/Frameworks
ASSISTANT_BIN_BUNDLE=$ASSISTANT_BUNDLE_DIR/Contents/MacOS/assistant
echo packaging $ASSISTANT_BUNDLE_DIR
mkdir $ASSISTANT_LIBS_BUNDLE_DIR
#update assistant binary and libs
SHARED_LIBS=`otool -L $ASSISTANT_BIN_BUNDLE | grep dylib | awk '{print $1}'`
# copy libs in shared libs bundle directory
for LIB in $SHARED_LIBS
do
  OLDLIB=$LIB
  if [ "$LIB" = "*System*" ]; then
   continue
  fi 
  if [ "$LIB" = "/usr/lib/libSystem.B.dylib" ]; then
   continue
  fi 
  if [ ! -f $LIB ]; then
    LIB=/usr/lib/$LIB
  fi
  if [ -f $LIB ]; then
    cp $LIB $ASSISTANT_LIBS_BUNDLE_DIR
    LIB=`basename $LIB`
    echo installing $ASSISTANT_LIBS_BUNDLE_DIR/$LIB
    # update name of an assistant bundle lib
    install_name_tool -id @executable_path/../Frameworks/$LIB $ASSISTANT_LIBS_BUNDLE_DIR/$LIB
    # package assitant bundle binary with the current assistant bundle lib
    install_name_tool -change $OLDLIB @executable_path/../Frameworks/$LIB $ASSISTANT_BIN_BUNDLE
  else
    echo `basename $LIB` not found... exiting
  fi
done

# create disk image with our bundle
echo creating Tulip-@PACKAGE_VERSION@.dmg disk image
hdiutil create -srcdir $APP_DIR -format UDZO -fs HFS+ -volname Tulip-@PACKAGE_VERSION@ -ov Tulip-@PACKAGE_VERSION@.dmg
# then internet enabled it
hdiutil internet-enable -yes tulip-@PACKAGE_VERSION@.dmg
