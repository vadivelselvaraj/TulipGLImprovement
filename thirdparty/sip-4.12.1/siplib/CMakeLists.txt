FIND_PACKAGE(PythonLibs REQUIRED)
FIND_PACKAGE(PythonInterp REQUIRED)

IF (PYTHONLIBS_FOUND AND PYTHONINTERP_FOUND)   					

INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIR} ${PYTHON_INCLUDE_PATH})

SET(siplib_SRCS
    apiversions.c
    bool.cpp
    descriptors.c
    objmap.c
    qtlib.c
    siplib.c
    threads.c
    voidptr.c
	sip.h
)

IF(MSVC)
STRING(REGEX REPLACE "/W[0-9]" "/W0" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
STRING(REGEX REPLACE "/W[0-9]" "/W0" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
ELSE(MSVC)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -w ")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -w ")
ENDIF(MSVC)

ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/sip.h ${CMAKE_CURRENT_SOURCE_DIR}/siplib.c
                   COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/../configure.py 
							-b ${CMAKE_CURRENT_BINARY_DIR}/../sipgen -e ${CMAKE_CURRENT_SOURCE_DIR}/../siplib
							-d ${CMAKE_CURRENT_BINARY_DIR}/../siplib
                     
                   DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/sip.h.in ${CMAKE_CURRENT_SOURCE_DIR}/siplib.c.in
				   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../)

ADD_LIBRARY(${SIP_LIB} SHARED ${siplib_SRCS})

SET_TARGET_PROPERTIES(${SIP_LIB} 
		      PROPERTIES OUTPUT_NAME sip PREFIX "")

IF(WIN32)
SET_TARGET_PROPERTIES(${SIP_LIB} 
		      PROPERTIES SUFFIX ".pyd")
ELSE(WIN32)
SET_TARGET_PROPERTIES(${SIP_LIB} 
		      PROPERTIES SUFFIX ".so")		      
ENDIF(WIN32)

TARGET_LINK_LIBRARIES(${SIP_LIB} ${PYTHON_LIBRARY})

INSTALL(TARGETS ${SIP_LIB}
	RUNTIME DESTINATION ${TulipBinInstallDir} COMPONENT ${SIP_LIB}
	LIBRARY DESTINATION ${TulipLibInstallDir} COMPONENT ${SIP_LIB}
	ARCHIVE DESTINATION ${TulipLibInstallDir} COMPONENT ${SIP_LIB})
	
ENDIF (PYTHONLIBS_FOUND AND PYTHONINTERP_FOUND)   					
