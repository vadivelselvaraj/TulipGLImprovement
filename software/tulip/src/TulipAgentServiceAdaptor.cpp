/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c TulipAgentService -a include/TulipAgentServiceAdaptor.h:src/TulipAgentServiceAdaptor.cpp resources/org.labri.TulipAgentService.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "TulipAgentServiceAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class TulipAgentService
 */

TulipAgentService::TulipAgentService(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

TulipAgentService::~TulipAgentService()
{
    // destructor
}

qlonglong TulipAgentService::pid() const
{
    // get the value of property pid
    return qvariant_cast< qlonglong >(parent()->property("pid"));
}

void TulipAgentService::AddPluginRepository(const QString &url)
{
    // handle method call org.labri.Tulip.AddPluginRepository
    QMetaObject::invokeMethod(parent(), "AddPluginRepository", Q_ARG(QString, url));
}

void TulipAgentService::CreatePerspective(const QString &name)
{
    // handle method call org.labri.Tulip.CreatePerspective
    QMetaObject::invokeMethod(parent(), "CreatePerspective", Q_ARG(QString, name));
}

QStringList TulipAgentService::GetCompatiblePerspectives(const QString &file)
{
    // handle method call org.labri.Tulip.GetCompatiblePerspectives
    QStringList result;
    QMetaObject::invokeMethod(parent(), "GetCompatiblePerspectives", Q_RETURN_ARG(QStringList, result), Q_ARG(QString, file));
    return result;
}

void TulipAgentService::OpenProject(const QString &file)
{
    // handle method call org.labri.Tulip.OpenProject
    QMetaObject::invokeMethod(parent(), "OpenProject", Q_ARG(QString, file));
}

void TulipAgentService::OpenProjectWith(const QString &file, const QString &perspective)
{
    // handle method call org.labri.Tulip.OpenProjectWith
    QMetaObject::invokeMethod(parent(), "OpenProjectWith", Q_ARG(QString, file), Q_ARG(QString, perspective));
}

void TulipAgentService::RemovePluginRepository(const QString &url)
{
    // handle method call org.labri.Tulip.RemovePluginRepository
    QMetaObject::invokeMethod(parent(), "RemovePluginRepository", Q_ARG(QString, url));
}

void TulipAgentService::ShowAboutPage()
{
    // handle method call org.labri.Tulip.ShowAboutPage
    QMetaObject::invokeMethod(parent(), "ShowAboutPage");
}

void TulipAgentService::ShowPluginsCenter()
{
    // handle method call org.labri.Tulip.ShowPluginsCenter
    QMetaObject::invokeMethod(parent(), "ShowPluginsCenter");
}

void TulipAgentService::ShowWelcomeScreen()
{
    // handle method call org.labri.Tulip.ShowWelcomeScreen
    QMetaObject::invokeMethod(parent(), "ShowWelcomeScreen");
}

