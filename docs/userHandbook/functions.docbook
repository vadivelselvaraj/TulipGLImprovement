<chapter id="functions"><title>Functionalities</title>
    <sect1 id="manag-graphs"><title>Management of Graphs</title>
        <para>Tulip software offers a way to create and manage graphs. The main window enables to have several 3D views to show differents graphs. The menu bar enables the user to create a new view. In there and with the mouse toolbar, the users can create nodes and edges at the place where the pointer is. When you have a graph and you want to keep traces of the graph, you can save it in the <filename>.tlp</filename> format, of Tulip Software. An other option is to export it in the <filename>GML</filename> format, for the <application>graphlet</application> system, a toolkit for graph editors and graph algorithms. Then, you can save as an picture the result you had. Tulip supports different formats : BMP, EPS, JPEG, PBM, PGM, PNG, PPM, SVG, XBM, XPM. </para>
        <para>
        Tulip could generate a graph from data : importation.
        <itemizedlist><title>Examples of importation</title>
        <listitem><para>Adjacency Matrix : a form of representation of graphs. Please visit <ulink url="http://en.wikipedia.org/wiki/Adjacency_matrix">Wikipedia: Adjacency Matrix</ulink> for more details.</para></listitem>
        <listitem><para>File System : make a graph with your file system ; the root is the directory you have selected.</para></listitem>
        <listitem><para>GML import : create a graph from this other format.</para></listitem>
        <listitem><para>dot : create a graph from <emphasis>graphviz</emphasis> format.</para></listitem>
        </itemizedlist>
        The second possibility is to generate automatically different kinds of graph : Graph, Tree, Grid, which could be complete, simple, uniform, ...
        <itemizedlist><title>Examples of generation</title>
        <listitem><para>Complete General Graph</para></listitem>
        <listitem><para>Complete Tree</para></listitem>
        <listitem><para>Grid</para></listitem>
        <listitem><para>Grid approximation</para></listitem>
        <listitem><para>Random General Graph</para></listitem>
        <listitem><para>Random Simple Graph</para></listitem>
        <listitem><para>Uniform Random Binary Tree</para></listitem>
        </itemizedlist>
        </para>

        <para>It is posssible to do a <quote>Copy-Paste</quote>. You can cut, copy and paste selected elements from a view. When you paste an element, it is placed at the same location it was in the original view. Use <code>View->Center View</code> (<keycap>Ctrl+Shift+C</keycap>) to make it visible in the second view. The menus and the mouse toolbar allow you to select the operation you want to perform on the selection.</para>
        <sect2 id="find"><title>The <quote>Find</quote> tool</title>
            <para>In the <code>Edit</code> menu, it exists a <code>Find</code> item allowing to do some requests on the current graph. The tool gives a way to choose the desired property and the action you want perform regarding the current selection: Make out of the found elements a new selection, Add them to the selection, Remove them from the selection or Intersect them with the current selection.</para>
        </sect2>
    </sect1>
    <sect1 id="algo"><title>Algorithms</title>
		&Algorithms;
    </sect1>
    <sect1 id="graph-properties"><title>Properties of graph</title>
        <para>In <application>Tulip</application>, there is a way to assign properties to each node or edge of the graph. <application>Tulip</application> defines two kinds of property : intrinsic and extrinsic. The first represents the properties computed relatively to the structure of graphs. But it is possible to assign values to the nodes or the edges that are not related to the structure. For example, if we build the map of a region and the nodes represent the towns, the label property can be used for the name of town. But it is not possible to determine the name with the structure of the graph; this kind of property is extrinsic.</para>

        <para>For each graph, <application>Tulip</application> provides a set of properties used by the renderer engine ; all begin with the <quote>view</quote> prefix by convention : viewColor, viewLabel, viewLayout... They are updated during the computation phase of the plugins. In the other hand, it is possible to define properties to store informations relative to the graph. The number of this created properties are not limited. 
        </para>
	<sect2 id="list-properties">
	<para> Following is the list of rendering properties :</para>
	<itemizedlist>
		<listitem><code>viewBorderColor :</code>
			Color of the border of an edge or a node.
		</listitem>
		<listitem><code>viewBorderWidth :</code>
			Width of the border of an edge or a node.
		</listitem>
		<listitem><code>viewColor :</code>
			Color of an edge or a node.
		</listitem>
		<listitem><code>viewLabel :</code>
			Label of an edge or a node.
		</listitem>
		<listitem><code>viewLabelColor :</code>
			Color label of an edge or a node.
		</listitem>
		<listitem><code>viewLabelPosition :</code>
			Label position (x,y,z) of an edge or a node.
		</listitem>
		<listitem><code>viewLayout :</code>
			Position (x,y,z) of a node, or vector of the bends positions of the edges.
		</listitem>
		<listitem><code>viewMetric :</code>
			Result value of the last measure ( <xref linkend="Measure" /> ) algorithm applied.
		</listitem>
		<listitem><code>viewRotation :</code>
			Rotation (0 to 360) of a node or an edge
		</listitem>
		<listitem><code>viewSelection :</code>
			Selection equals true if the node or edge is selected. False if it is not.
		</listitem>
		<listitem><code>viewShape :</code>
			Shape of a node or a graph.
		</listitem>
		<listitem><code>viewSize :</code>
			Size (height, width, depth) of a node or an edge. To re-size an edge, the parameter "Size Interpolation" (CONTROL+R) must be switched off. For an edge, the three fields are : Width at source of the edge, Width at the end of the edge, Size of the arrow. 
		</listitem>
		<listitem><code>viewTexture :</code>
			Texture will replace the color background of the node.
		</listitem>
	</itemizedlist>
	</sect2>
	<sect2 id="using-props"><title>Using Properties</title>
		<sect3 id="properties"><title>Updates of property values</title>
        <para>As it is explained in the last section, it is possible to update the properties attached to the graph elements with algorithms. An other solution is to update the values through the <code>Property</code> tab of the <code>Info Editor</code> subwindow.</para>
        <para>To give an example, create a graph :
        <itemizedlist>
            <listitem><para>Select the property you want to update, <code>viewSize</code> in the <code>local</code> table, for example, to manage the size of the nodes. Now, you can change all values or the value of one node.
                <orderedlist>
                    <listitem><para>Click on <code>Set all</code>, and write the new coordinates : <code>(2.0, 2.0, 2.0)</code></para></listitem>
                    <listitem><para>Click on the line and the second column of the choosed node in the table. Change the values for the <code>width</code>, the <code>height</code> and <code>depth</code>.</para></listitem>
                </orderedlist>
            </para></listitem>
        </itemizedlist>

         If you want to change properties of selected elements, use the check box <code>selected only</code> of the <code>Property</code> tab.
        <itemizedlist>
            <listitem><para>Select elements with the <inlinegraphic fileref="images/i_selection.png"/> mouse toolbar operation or using the 'Add/Remove Selection' item displayed in the contextual pop-up menu which appears when pressing on the mouse right button (press <keycap>Ctrl</keycap> key when mouse pressing on Mac).
            </para></listitem>
            <listitem><para>Select the property you want to modify : <code>viewLabel</code>.
            </para></listitem>
            <listitem><para>Click on the checkbox named <code>Filter</code>. The selected element just appears in the table above.
            </para></listitem>
            <listitem><para>Click on <code>Set all</code> and write the text you want to display : <quote>Hey!</quote>.
            </para></listitem>
        </itemizedlist>
        If you uncheck <code>selected only</code>, all nodes are in the table. It is possible to do the same thing with the values of edges. You just have to click on the tab named <code>Edges</code>.
     There is an other solution to modify the value of one node or edge :
        <itemizedlist>
            <listitem><para>First select the <inlinegraphic fileref="images/i_select.png"/> mouse toolbar operation, then click on the node or edge you want to  update.</para></listitem>
            <listitem><para>The <code>Element</code> tab of the <code>Info Editor</code> subwindow is then selected. It displays the informations of the element you clicked on.</para></listitem>
        </itemizedlist>
        </para>
        </sect3>
        <sect3 id="mana-inst"><title>Management of properties</title>
            <para>The bottom of the <code>Property</code> subwindow enables to manage the properties. For each graph, as explain before, a set of display properties already exists. If you want to create a new property :
                <itemizedlist>
                    <listitem><para>Click on the <code>New</code> button.</para></listitem>
                    <listitem><para>Select the type of property, <code>String</code>. (other possibilities are Color, Integer, Layout, Metric, Size, Selection)</para></listitem>
                    <listitem><para>Type the name of the new Property (e.g. <code>mylabel</code>).</para></listitem>
                </itemizedlist>

            For removing a property, you just have to select the property and click on the button named <code>Remove</code>. When deleting properties used by the render engine, those properties will be temporary removed from the list but still continue to exist. Note that it is not possible to remove <code>inherited</code> properties.
            </para>
            <para>The last feature is cloning property. Select the desired property and click on the button named <code>Clone</code>. Type the name you have chosen. The new property keeps the values.</para>
        </sect3>

        <sect3 id="find-tut"><title>Find : make a request.</title>
            <para>The find tool is in the <code>Edit</code> menu. Make a graph with several nodes. Change some properties of node for making operations. Select nodes, check the <code>Filter</code> box and select the properties you want to change : <code>viewRotation</code>. Click on the <code>Set all</code> button and type a value (<code>20</code> for example). Now, you have some node with a rotation of 0 degree and some other rotated of 20. So in the Find box : 
                <itemizedlist>
                        <listitem><para>Select the property used for the request : <code>viewRotation</code>.</para></listitem>
                        <listitem><para>Choose the operation and type a value for the comparaisons : <code>=</code> and <code>20</code>, to find the element rotated of 20 degrees. </para></listitem>
                        <listitem><para>Select the action in the <code>Options</code> part : <code>Add</code> and the kind of the elements of the request : <code>on nodes</code>.</para></listitem>
                </itemizedlist>
            </para>
        </sect3>
	</sect2>
    </sect1>
     <sect1 id="hierarchy"><title>Hierarchy</title>
		&Subgraphs;
    </sect1>
    <sect1 id="stats-panels"><title>Statistics Panel (not available in standard version)</title>
        <para><application>Tulip</application> also provides a simple statistics interface which allows the user to compute Histograms, Scatter Plots, Augmented Displays and Clustering. The computation of Histogram and Scatter Plot depends on a number for metrics, chosen by the user (from 1 to 3), and a discretization step (one given per metric). Finally, the clustering is performed from a clustering plane, specified by the user with a plane equation.</para>
    </sect1>
    <sect1 id="text-rend"><title>Text Rendering</title>
        <para>It is possible to assign a label to each element of the graph. <application>Tulip</application> can display them with three methods : 3D and texture for node labels, bitmap for node and edge labels. 
        <figure>
            <title>Bitmap Rendering</title>
            <graphic fileref="images/bitmap-label.png"/>
        </figure>
        <figure>
            <title>3D Rendering</title>
            <graphic fileref="images/3d-label.png"/>
        </figure>
        <figure>
            <title>Texture Rendering</title>
            <graphic fileref="images/text-label.png"/>
        </figure>
        </para>
        <para>In a future version of Tulip, It will be possible to create labels with XML tags like the HTML rendering. Some tags will be available in order to allow the user to organize the content of the labels.</para>
    </sect1>
</chapter>
