<!--<!DOCTYPE chapter SYSTEM "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">-->
<chapter id="tutorial"><title>Tutorials</title>
    <sect1 id="first-step"><title>First Step</title>
        <para> In this part, the goal is to help you to simply make a graph and to save your work.</para>
        <sect2 id="first-dis"><title>First graph display</title>
            <sect3 id="import"><title>Importation of a graph</title>
                <para>
		<itemizedlist>
		    <listitem><para>Select the <code>File->Import</code> item.</para>
		    </listitem>
		    <listitem><para>Select a method of importation : <code>Grid approximation</code>, for example.</para></listitem>
		</itemizedlist>
		Do not modify the default parameters. Here is displayed the graph with nodes (red) and edges (black). With the wheel of the mouse, you can zoom on the graph to see a specific node. In moving the mouse with its left button pressed, you can translate the graph in the plane of the view, pressing the key <keycap>SHIFT</keycap> for rotation and the key <keycap>Ctrl</keycap> (<keycap>Alt</keycap> key on Mac) to rotate around the z axis and zoom. In order to come back to the oldest view, Select <code>View->Center view</code> from the menu bar.
		<itemizedlist>
		    <listitem><para>Select <code>Algorithm->Measure->Misc->Id</code> from the menu bar, to compute a value (metric) for each node and edge of the graph. </para></listitem>
		</itemizedlist>
		The graph is now displayed with colors depending of the metric. You can change the colors with the menu : <code>Algorithm->Color->Metric Mapping</code>. This plugin computes an interpolation between the two selected colors.
                </para>
            </sect3>
            <sect3 id="create"><title>Creation of a graph</title>
                <para>In this section, we learn how to create its own graph, element by element.
                <itemizedlist>
                    <listitem>
                        <para>Select the <code>File->New</code> from the menu bar to create a new graph.</para>
                    </listitem>
                    <listitem>
                        <para>Create a graph adding nodes and edges. For a node, select the <inlinegraphic fileref="images/i_addnode.png"/> mouse toolbar operation and click on the position you have chosen. To insert an edge, select the <inlinegraphic fileref="images/i_addedge.png"/> mouse toolbar operation. Click on the source node, then on the target node. You can display or hide them with <code>Edges</code> checkbox in the <code>Overview</code> subwindow. In the same way, you can display or hide the arrows checking <code>Arrows</code>.</para>
                    </listitem>
                    <listitem>
                        <para>Delete elements of the graph. Select the <inlinegraphic fileref="images/i_del.png"/> mouse toolbar operation, then click on the element you want to delete.</para>
                    </listitem>
                </itemizedlist>
                </para>
            </sect3>
        </sect2>
	<sect2 id="save"><title>Save options</title>
	    <para>To save your work, you just have to select <code>File->Save</code> or <code>Save as</code>: a dialog appears allowing to enter the author of the graph and some comments; then after clicking on the 'OK' button, just type the file name and choose its location.</para>
            <para>The second way to make a save is to export the graph in a special format : GML or TLP (equivalent to <code>Save as</code>). Select <code>File->Export</code> and the format of your choice, then choose the file name and location.</para>
	</sect2>
        <sect2 id="algos"><title>Algorithms</title>
	    <para>This part explains how to apply an algorithm to a graph. Previously, you have created or imported a graph. Select <code>Algorithm->Layout</code> (for example) and an algorithm : <code>Hierarchical->Hierarchical Graph</code> for example.</para>
            <para>In this case, we use an algorithm dealing with the layout of the nodes and the edges. It is possible to apply all other kinds of algorithm. Some <code>layout</code> algorithms may not apply to your graph if it does not belong to the right category of graphs. With the <code>Bubble Tree</code> layout, you can not display a grid. If it is not valid, a pop-up message will displayed explaining the problem.</para>
	</sect2>
    </sect1>
    <sect1 id="improve-layout"><title>Improving a layout</title>
    	<sect2 id="improve-layout-intro"><title>Introduction</title>
    		In this tutorial, we will show you how to use, layouts algorithms, and graph properties to obtain a nice an clear graph. To do so, we will first import a file-system structure, and then use the graph properties to find specific files. (*.cpp or *.hpp ...)
    	</sect2>
    	<sect2 id="improve-layout-import"><title>File-system importation</title>
    		<para>To import a file-system we need to select the <code>File System Directory</code> importation tool which is in the menu <code>File->Import->Misc</code>.
    		</para>
    		<para>A "file browser dialog" will pop-up to select the root directory that you want. On this dialog, you just need to select a directory for instance, your documents (On Windows : My Documents).
    		</para>
    		<para>
    			The importation plug in will work for some time, and a tree graph will appear representing the file system chosen.
    		</para>
    		<graphic fileref="images/tutorials_improvelayout_1.png" />
     	</sect2>
     	<para>To follow the rest of this tutorial you need to download this tulip graph file : <ulink url="http://www.labri.fr/perso/auber/projects/tulip/samples/filesystem.tlp.gz">Graph</ulink>. Load this compressed tulip file into the software (<code>File->Open</code>).</para>
     	<sect2 id="improve-layout-newlayout"><title>Using other Layouts :</title>
     		<sect3 id="tuto-Bubble-Tree-layout"><title><code>Bubble Tree Layout</code> :</title>
     			<para>This layout algorithm can be found in the menu <code>Algorithm->Layout->Tree</code>.
     			The bubble tree layout is very useful to notice directories that have the same structure.
     			In this section, we will try to locate those directories.</para>
     			<para>To have a better view on the tree, we will create a new 3D view. Menu : View->New 3D view or press <keycap>Ctrl+Shift+N</keycap>. When the new view is created, we need to re-organize the windows. Menu : Windows->Tile.</para>
     			<para>Now that we can see the both views at the same time, we will zoom in (right window). Select the magnifying glass tool, and draw a bounding box on the left side of the graph. Just like this :</para>
     			<graphic fileref="images/tutorials_improvelayout_bubble_1.png" />
     			<para>As you can see, two nodes looks very alike. By using the "Get Information " tool, we can get there ids : Node 1965 and node 2009. Indeed, those to directories have the same structure since they both contains plug-ins source files.</para>
     			<para>We will now re-center the view (<code>View->Center View</code> or <keycap>Ctrl+Shift+C</keycap>). </para>
			<para>Let's say that we now want to study our graph without the plug-in directory. To delete it we have first to select it, and then select all its sub directories.</para>
			<itemizedlist>
				<listitem>
					<para>Select the plug-in directory : Use the Find tool, (<code>Edit->Find</code> or <keycap>Ctrl+F</keycap>) with the field <code>Input property</code> set to "name", filter function set to "=" and filter value set to "plugins".</para>
				</listitem>
				<listitem>
					<para>Select all its sub-directories : Use the <code>Algorithm->Selection->Reachable Sub-Graph</code> algorithm with the field distance set to 50. </para>
				</listitem>
				<listitem>
					<para>Delete all the selection : press <keycap>Del</keycap></para>
				</listitem>
				<listitem>
					<para>Re-draw the bubble layout <code>Algorithm->Layout->Tree->Bubble Tree</code>.</para>
				</listitem>
			</itemizedlist>
			<para>Following is what you should see :</para>
			<graphic fileref="images/tutorials_improvelayout_bubble_2.png" />
     			
     		</sect3>
     		As you can see, the bubble tree layout can be quite useful.
     		<sect3 id="improve-layout-treemap"><title><code>The Tree Map layout </code>:</title>
     		<para>This Layout algorithm can be found in the menu <code>Algorithm->Layout->Tree</code>.
     		      The treemap layout is very useful to notice large disk usage files.
     		      This section will show you how to use the tree map layout</para>
     		<para>First, make sure that you have unchecked the <code>Force Ratio</code> option that you can access via the menu <code>Options</code>.</para>
     		<para>Apply the layout algorithm <code>Algorithm->Layout->Tree->Squarified Tree Map</code> with the following parameters :
     		</para>
     			<itemizedlist>
     				<listitem>Metric : set to "size".
     				</listitem>
     				<listitem>Aspect Ratio : set to 1
     				</listitem>
     				<listitem>Texture? : checked
     				</listitem>
     			</itemizedlist>
     		 <para>Do not forget to refresh the views (<keycap>Ctrl+Shift+R</keycap>). Following is what you should see :</para>
     		<graphic fileref="images/tutorials_improvelayout_treemap_1.png" />
     		<para>As you can see, we easily get a global information on the size of files. Which is the biggest, or, which is the smallest ? But, we can also see the structure of directories, since files and directories are nested nodes. See <ulink url="http://en.wikipedia.org/wiki/Tree_map">Wikipedia : Tree Maps </ulink> for more information. </para>
     		</sect3>
     		An other layout can be useful, the Improved Walker.
     		<sect3 id="improve-layout-improvewalker"><title><code> Improved Walker layout </code>:</title>
     		<para> This layout can be find in the <code>Algorithm->Layout->Tree->Improve Walker</code>.</para>
     		<para>Use the following parameters :</para>
     		<itemizedlist>
     			<listitem> Node Size : viewSize
     			</listitem>
     			<listitem>Orientation : Left to right.
     			</listitem>
     			<listitem>Orthogonal : Checked.
     			</listitem>
     			<listitem>Layer Spacing : Default value.
     			</listitem>
     			<listitem>Node Spacing : Default Value.
     			</listitem>
     		</itemizedlist>
     		<para>You should see a tree looking like this :</para>
     		<graphic fileref="images/tutorials_improvelayout_2.png" />
     		
     		<para>As you can see, the improve walker layout, is just a hierarchical layout. It is very useful to understand the tree structure of a file system.</para>
     		</sect3>
     	</sect2>
     	<sect2 id="improve-layout-labels"><title>Showing Labels</title>
     		<para>First, in the <code>Rendering Parameters</code> dialog (<keycap>Ctrl+R</keycap>), check the <code>nodes</code> box for the <code>Visibility</code> option.</para>
     		<para>We will now try to add labels to the nodes. To do so, select the node property called "name" in the info editor window, click on the button <code>To Labels</code>.</para>
     		<para>You should now see a graph looking like that :</para>
     		<graphic fileref="images/tutorials_improvelayout_3.png" />
     		<para>As you can see, the labels, don't fit in nodes and it is very hard to read the graph. To fix this problem, press <keycap>Ctrl+R</keycap> , in the Labels box, the field <code>Type</code> must be equal to "3D". Then, apply the <code>Algorithm->Size->Fit To Label</code> algorithm.</para>
     		
     		<para>You should obtain something like this.</para>
     		<graphic fileref="images/tutorials_improvelayout_4.png" />
     		<para>By zooming in we can see the labels :</para>
     		<graphic fileref="images/tutorials_improvelayout_5.png" />
     		<para>If you want to display the big file (high disc space) with big nodes, use the <code>Algorithm->Size->Metric Mapping</code> algorithm with the parameter called "property" set to "size". </para>
     	</sect2>
     	<sect2 id="improve-layout-ext"><title>Showing a specific kind of file.</title>
     		<para>Now that our graph as a nice and clear layout, we would like to locate all of our Source files (*.cpp). To do so, we will use the Find tool (Edit->Find or <keycap>Ctrl+F</keycap>).</para>
     		<para>Use the following parameters :</para>
     		<itemizedlist>
     			<listitem> Input Property : name
     			</listitem>
     			<listitem> Filter :  filter function set to "=" and filter value set to ".*cpp or .*hpp". For more details on regular expressions, follow this link : <ulink url="http://en.wikipedia.org/wiki/Regular_expression">WikiPedia : Regex </ulink>
     			</listitem>
     			<listitem> Options : check the <code>Replace</code> radio button and select <code>On nodes</code>.
     			</listitem>
     		</itemizedlist>
     		<para>Now that our source files are selected, we will apply a different color to them.</para>
     		<para>In the info editor window, select the node property called "viewColor", check the <code>selected only</code> option. Now that we only see the "viewColor" property of the selected nodes, click on the button <code>Set all</code> and choose the color that you want. (We choosed green)</para>
     		<para>You should see a graph like the one following :</para>
     		<graphic fileref="images/tutorials_improvelayout_6.png" />
     		<graphic fileref="images/tutorials_improvelayout_treemap_6.png" />
     	</sect2>
     	<sect2 id="improve-layout-conclusion"><title>Conclusion</title>
     		<para>As you could have seen, tulip implements powerful layouts and tools, to make a simple and understandable graph from a complex one.  </para>
     	</sect2>
    </sect1>
    <sect1 id="people-in-infovis"><title>People in InfoVis</title>
    	<sect2 id="people-in-infovis"><title>Analyzing an author.</title>
    		<para>Before anything, download, and open this <ulink url="http://tulip.labri.fr/samples/GRCite.tlp.gz">tulip graph file</ulink>. Click on the tab Hierarchy (in the info editor window) and select the subgraph GRCite. You need to delete the other sub graphs by doing a right click on there name, and then "remove". </para>
    		<para>This graph represent the relations between authors, conferences and papers. To distinguish paper, conferences and authors, we will re-color them : </para>
    		<itemizedlist>
    			<listitem> <para>Select all papers : Press on <keycap>Ctrl+F</keycap> to display the find tool. In the Input Property field, select the property "type". And on the line below, set the filter function to "=" and the filter value to 0, before clicking on the Find button.</para>
    			</listitem>
    			<listitem> <para>Re-color the nodes in red : Select the tab Property (in the info editor). Check the "selected only" option. Select the property viewColor, and, by clicking on the button "Set all" choose the red color.</para>
    			</listitem>
    		</itemizedlist>
    		<para>Repeat the actions above, for authors (type = 2 ) and conferences (type = 1) with other color (blue , yellow).</para>
    		<para>You should obtain something like this :</para>
    		<graphic fileref="images/tutorials_peopleinfovis_1.png" />
    		<para><code>Select an author :</code></para>
    		<para>Let's pick a single author to investigate, in this case George Robertson. First, we interactively select that node by hitting <keycap>Ctrl+F</keycap> for the find tool, choosing the "titleshort" property, the "=" as filter fuction, and the regular expression "G.*Rob.*" as filter value. We then quickly check to see how he is connected to the entire graph by temporarily moving that node away from the others to see roughly how many edges are attached to it.</para>
    		<para>Following is what you should get :</para>
    		<graphic fileref="images/tutorials_peopleinfovis_2.png" />
    		<para><code>Go deeper :</code></para>
    		<para>We then select the menu item <code>Algorithm->Selection->Reachable Sub-Graph</code>, type 1 for the distance into the popup panel and 0 for the direction of the edges (outgoing). We then select the menu item Edit->Create Subgraph to save this selection for further manipulation, naming it GR.1hop.outgoing. We then select this new subgraph in the hierarchy tab, and lay out this subgraph using a hierarchical drawing algorithm (<code>Algorithm->Layout->Hierarchical->Hierarchical graph</code>).</para>
    		<para> We can see simply from the drawing which papers were published first, as they are cited by the later ones. Robertson has published 11 papers in this database. The coloring by the number of citations (<code>Algorithm->Color->Metric Mapping</code>, with field property set to "arityOut" ) shows that "Cone Trees" is his most influential work.</para>
    		<graphic fileref="images/tutorials_peopleinfovis_3.png" />
    		<para>Finally, we select all papers by hitting <keycap>Ctrl+F</keycap> for the find tool, choosing the  type property, the "=" filter, and the value 0 for papers. We explicitly add Robertson to the selection using the selection tool to select its edges too (see below), and save this whole set to a new subgraph that we name GRCitesub:</para>
    		<graphic fileref="images/tutorials_peopleinfovis_4.png" />
    		<para>In the new subgraph, we then select the Robertson node. Again as above, use the <code>Algorithm->Selection->Reachable Sub-Graph</code> algorithm, pick a depth of 2 to find all papers that cite a paper written by Robertson, and save the resulting subgraph using the Edit->Create Subgraph menu. The final image shows the result of using the <code>Algorithm->Layout->Hierarchical Graph</code> layout.</para>
    		<graphic fileref="images/tutorials_peopleinfovis_5.png" />
    	</sect2>
    	You can now close this graph since we are going to use an other one for the following of this tutorial.
  	The next graph is similar to the this one but, has coauthorship edges linking authors who write papers together.
  	You can download <ulink url="http://tulip.labri.fr/samples/GRSC.tlp.gz">it</ulink> and open it in tulip.
  	<para></para>
  	<para></para>
    	<sect2 id="sec"><title>What, if any, are the relationships between two or more or all researchers</title>
    		<sect3 id="FocusingonTwoAuthors"><title>Focusing on Two Authors</title>
    			<para>Here we focus on the relationship between two authors, in this case Robertson and Card.</para>
    			<para>To select them use the find tool, with, at the first time the regular expressions : "G.*Rob.*".
    			 And at  a  second time, the regular expression ".*Card.*" and the "add" option checked. 
    			 To move those selected nodes away from the main layout, use the "moving selection" tool. If you click on one of the node, you will be able to move both nodes at the same time.</para>
    				<graphic fileref="images/tutorials_peopleinfovis_6.png" />
    		 	<para>Select Card and Roberts at the same time ( Press <keycap>Shift</keycap> while clicking on a node). Select all their neighbors by applying the <code>Algorithm->Selection->Reachable Sub-Graph</code> algorithm with distance 1. Create a new Subgraph.</para>
    		 	<para>Following is a hierarchical layout of the neighborhood of all outgoing edges one hop away; that is, the publications and coauthors of the union of Card and Robertson.</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_7.png" />
    		 	<para>You can repeat those operations for Robertson only and Card only :</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_8.png" />
    		 	<para> The similarity of these final three images shows the very strong ties between these two authors.</para>
    		 </sect3>
    		 You can now close this graph since we are going to use an other one for the following of this tutorial.
  		 The next graph is similar to the old one but, has links between author and conference by following links from author to paper, and from paper to conference. Then, delete papers.
  		 You can download <ulink url="http://tulip.labri.fr/samples/ConfAuth.tlp.gz">it</ulink> and open it in tulip.
    		 <sect3 id="auth-conf"><title>Central Authors and Conferences: Overview</title>
    		       <para>To show the large-scale structure of this dataset, we colored Authors in green and conferences in blue with a GEM layout (<code>Algorithm->Layout->Force Directed->GEM</code>). We deleted all the papers nodes.</para>
    		       <graphic fileref="images/tutorials_peopleinfovis_9.png" />
    		       By zooming in :
    		       <graphic fileref="images/tutorials_peopleinfovis_10.png" />
    		       <para>We select only the large connected component (the big set of nodes) : Select a fiew nodes in the center of the component and run the "Reachable Subgraph" selection algorithm with distance set to 50. </para>  
    		       <para>Color the authors by the Strahler metric: Run the <code>Algorithm->Measure->Graph->Strahler</code> algorithm and then a <code>Algorithm->Color->Metric Mapping</code> algorithm.</para>
    		       <para>Finally, we color papers in white.</para> 
    		       <para> This layout, shows the branching structure of the dataset.</para>
    		       <graphic fileref="images/tutorials_peopleinfovis_11.png" />
    		       <para>To distinguish authors and conferences :</para>
    		       <para>Select all authors (nodes of type 2) and set their viewLabelColor property to red.</para>
    		       <graphic fileref="images/tutorials_peopleinfovis_12.png" />
    		 </sect3>
    		 <sect3 id="top-conf"><title>Central Authors and Conferences: Top Conferences</title>
    		 	<para>It is very simple to see top conferences since they are the ones where the number of authors is high. The Metric Degree will help us to highlight them (<code>Algorithm->Measure->Graph->Degree </code>). </para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_13.png" />
    		 </sect3>
    		  <sect3 id="top-conf"><title>Central Authors and Conferences: Top Autors</title>
    		 	<para>Run the <code>Algorithm->Measure->Graph->Strahler</code> algorithm to see strong ties between conferences and authors : </para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_14.png" />
    		 	<para>Then run the <code>Algorithm->General->Convolution</code>, the value of the "discretization" parameter should be near 30 to obtain 5 clusters ) (Picture 1) to obtain the following clusters (Picture 2):</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_21.png" />
    		 	<graphic fileref="images/tutorials_peopleinfovis_15.png" />
    		 	<para>The Strahler-Convolution clustering yields five clusters, according to increasing centrality. The first cluster is mostly yellow, and contains most of the data. The second cluster contains a next tier of 26 authors that have had a relatively strong impact. The third cluster contains a group of 7 influential authors (Chi, Bederson, Eick, Rao, Pirolli, Ward, and Brown), and the fourth cluster (Roth, Robertson, Keim, and Stasko) is yet more central. The fifth cluster is the single node of Mackinlay, and the last one is Card and Shneiderman. Our automatic clustering method clearly yields very believeable results in this case.
    		 	</para>
    		 </sect3>
    		 In the last section, we will use an other graph. Please download <ulink url="http://tulip.labri.fr/samples/ConfAuthRecSmallWorld.tlp.gz">it</ulink> and open it in tulip.
    		 <sect3 id="interauthor-cons"><title>Hierarchical Structure of Interauthor Connections</title>
    		 	<para>To be able to see the labels within metanode check the "metanode" option in the <code>Rendering Parameters</code> dialog (<keycap>Ctrl+R</keycap>).</para>
    		 	<para>The clusters have been computed using the <code>Algorithm->General->Strength</code> clustering algorithm.</para>
    		 	<para>The overview image from the previous section, showing the graph of all authors and papers, is extremely cluttered. In the previous task we show one way to extricate more information, by finding the most important items via convolution clustering. Another clustering approach, small-worlds clustering, allows us to instead navigate through a hierarchical subdivision of the entire dataset. The simplified overview allows us to understand the graph's high level structure. The strength metric computes the number of cycles of length 3 and 4 passing through each edge, normalized by the maximum possible value. The first image shows the clustered dataset. Small-world navigation is useful when exploring an unfamiliar graph to quickly find the structure of complex components. The eccentricity metric (<code>Algorithm->Measure->Graph->Eccentricity</code>), which measures whether nodes are peripheral (here in yellow) or central (here in blue), guides us to complexity immediately. This metric is O(n^3), but the small-world decomposition simplifies the graph, making the computation tractable.
    		 	</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_16.png" />
    		 	<para> The picture shows zooming in towards the  node that has many blue lines leading to it.
    		 	</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_20.png" />
    		 	<para> We then jump inside that cluster (Select the metanode, Right Click, Go inside), which is itself a small-world graph.
    		 	</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_17.png" />
    		 	<para> We once again zoom towards the most central node with many blue edges, where we see a cluster that has the InfoVis 96 conference and all the authors who only published the infovis community in that year.
    		 	</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_18.png" />
    		 	<graphic fileref="images/tutorials_peopleinfovis_19.png" />
    		 	<para> We see this star shape small-world decomposition only for the InfoVis symposia, because of the nature of this dataset: it is only the InfoVis symposia that have a complete set of authors and papers available.</para>
    		 </sect3>
    	</sect2>
    </sect1>
    <sect1 id="statistics"><title>Statistics Panel (not available in the downloadable binary versions, requires configuration with --enable-stats-gui when compiling Tulip from source code)</title>
	<sect2 id="stats-tut-intro"><title>Introduction</title>
    	    <para>
	    This section will explain how to use the statistics panel in Tulip. The tutorial is composed of 3 main parts. Firstly, you will see how to generate a scatter plot or an histogram from a graph. In a second part, you will see how to enable augmented displays on the graph. And finally, you will see how to clusterize the graph from the statistics values previously computed.
	    </para>
	    <para>
	    Every screenshots that will be shown in this tutorial are based on this tree :
		<figure>
		    <title>Statistics base test set : a tree</title>
		    <graphic fileref="images/BaseTree.png"/>
		</figure>
	    </para>
	</sect2>
	<sect2 id="stats-tut-part1"><title>Scatter plot and Histogram computation</title>
	    <para>
	    The first thing to understand about the statistics panel is how to generate an histogram or a scatter plot from the graph. The computation of histogram/scatter plot is based on metrics. So, in a first time, you will have to compute metrics. In the example, we have computed three metrics : Arity, DAGLevel and Depth. The new metrics are automatically updated on the <emphasis>Available Metrics</emphasis> list on the Stats panel :
		<figure>
		   <title>The metrics available in the statistics panel</title>
		   <graphic fileref="images/StatsPanel.png"/>
		</figure>
	    </para>

	    <para>
	    Now that you have some metrics available. You can add them to the <emphasis>Used Metrics</emphasis> list simply using the <emphasis>Add</emphasis> and <emphasis>Remove</emphasis> buttons. The number of dimensions of the result will only depend of the numbers of metrics you add to the list. With only one metric added, you will have an frequency histogram displayed. With two (resp three) metrics you will have a 2D (resp. 3D) scatter plot. Each metric representing a different dimension.
	    </para>

	    <para>
	    In the example, we have only added the <emphasis>DAGLevel</emphasis> metric to the <emphasis>Used Metrics</emphasis> list :
		<figure>
		    <title>A single metric for an histogram</title>
		    <graphic fileref="images/AddMetric.png"/>
		</figure>

	    As you can see, adding a metric implies some changes in the interface. The bottom button becomes enabled, so as the edit box corresponding to <emphasis>Discretization Step 1</emphasis>. You can specify a discretization step, even if it is not really useful for our example.
	    </para>

	    <para>
	    Now the last step before having a beautiful frequency histogram displayed : asking the panel to compute it. Just click on the <emphasis>Compute Histogram</emphasis> button. That's it !!! You have your first histogram : congratulations !!!
		<figure>
		    <title>Your first histogram</title>
		    <graphic fileref="images/Histogram.png"/>
		</figure>
	    </para>

	    <para>
	    Now that we have an histogram. We are not going to stop here. Let's generate a scatter plot in three dimensions.
	    Just add two other metrics to the <emphasis>Used Metrics</emphasis> list. You will notice that the text of the <emphasis>Compute Histogram</emphasis> button now becomes <emphasis>Compute Scatter Plot</emphasis>. Just click it and you will have a scatter plot.
	    </para>

	    <para>
	    Here is the result with our base tree and the three metrics mentionned in the introduction :
		<figure>
		    <title>Scatter plot generated from the three metrics</title>
		    <graphic fileref="images/ScatterPlot.png"/>
		</figure>
	    </para>

	    <para>
	    As a conclusion to this first part, you have learnt how to generate a simple frequency histogram from a graph and a metric. You have also learnt how to generate a whole scatter plot from 2 to 3 metrics. In the next part, you will learn how to display the basic statical values on the graph.
	    </para>
	</sect2>
	<sect2 id="stats-tut-part2"><title>Statistics values and Augmented displays</title>
	    <para>
	    Now, we will see how to compute the main statistics results, and how to display them on the generated Histogram/Scatter Plot. Switch to the <emphasis>Display</emphasis> tab of the statistics panel. Yet, everything is grayed. To compute the values of the tab, you must click on the bottom button <emphasis>Compute Results</emphasis>. Note that this button is reachable on every tab on the panel but you will be able to click it only if the <emphasis>Used Metrics</emphasis> list of the <emphasis>Computation</emphasis> tab is not empty.
		<figure>
		    <title>Click on the button Compute Result to enable the tab</title>
		    <graphic fileref="images/ComputeResults.png"/>
		</figure>
	    </para>

	    <para>
	    Once the results computed, most of the elements of the panel should be enabled. Note that the <emphasis>Regression Function</emphasis> group is enabled only if you hase two metrics in the <emphasis>Used Metrics</emphasis> list, and <emphasis>Eigenvectors</emphasis> is enabled only if you have three metrics in the <emphasis>Used Metrics</emphasis> list.
	    </para>

	    <para>
	    The checkboxes next to each groupboxes (except the <emphasis>Variance</emphasis> one) are used to display on the Histogram/Scatter plot, the result of the group. For example : checking the checkbox next to <emphasis>Average</emphasis> will display the average point on the graph (an Axis Point in red (c.f. GlAugmentedDisplay in the developer handbook)).

		<figure>
		    <title>Checking Average on the display tab</title>
		    <graphic fileref="images/CheckDisplay.png"/>
		</figure>
		<figure>
		    <title>The average of the scatter plot</title>
		    <graphic fileref="images/ViewAverage.png"/>
		</figure>
	    </para>

	    <para>
	    Every augmented display works the same way. You will just have to click on the checkbox next to the group to enable the display of the result. Note that you can't display the Variance since this result can't be represented in an interesting way on the graph. use instead the standard deviation.
	    </para>

	    <para>
	    Now that you know how to display the statistics results, you will see how to clusterize the scatter plot / histogram from these values.
	    </para>
	</sect2>
	<sect2 id="stats-tut-part3"><title>Clustering with the statistics panel</title>
	    <para>
	    The last part of this tutorial will teach you how to clusterize from the statistics results previously computed. Firstly, switch to the <emphasis>Clustering</emphasis> tab. The Combobox <emphasis>Clustering Value</emphasis> lists the available start for a clustering plane depending on what has been computed before. Select <emphasis>Average (Z)</emphasis>(you must have selected 3 metrics), the plane coordinates will be modified according to the values of the average's Z coordinate. Check the <emphasis>Display Clustering Plane</emphasis> checkbox. The plane appears in transparent red, showing you the future two clusters.

		<figure>
		   <title>Selection of the clustering value</title>
		   <graphic fileref="images/SelectAverageClustering.png"/>
		</figure>

		<figure>
		    <title>The clustering plane</title>
		    <graphic fileref="images/DisplayClusteringPlane.png"/>
		</figure>
	    </para>

	    <para>In order to have the good clustering, you can modify the plane equation (not really smooth : will be enhanced in the next versions of Tulip) to move the plane. Finally, to clusterize, just click on the <emphasis>Clusterize</emphasis> button. That's it ! The graph is now clusterized. In order to ensure, just check the <emphasis>Cluster Tree</emphasis>.

		<figure>
		    <title>The new clusters after statistic clustering</title>
		    <graphic fileref="images/HierarchyTree.png"/>
		</figure>
	    </para>
	</sect2>
	<sect2 id="stats-tut-conclusion"><title>Conclusion</title>
	    <para>
	    As a conclusion, you have learnt how to use the statistics panel of Tulip. As you can see, obtaining results is easy and fast. If you have any question about that panel, you can contact it's creator at <email>maxime.delorme@gmail.com</email>
	    </para>
	</sect2>	
    </sect1>
</chapter>
