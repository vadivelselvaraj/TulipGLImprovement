<!--<!DOCTYPE chapter SYSTEM "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">-->
<chapter id="tutorial"><title>Tutorials</title>
    <sect1 id="first-step"><title>First Step</title>
        <para> The goal of this part is to make a graph and to save your work.</para>
        <sect2 id="first-dis"><title>Displaying your first graph</title>
            <sect3 id="import"><title>Importing a graph</title>
                <para>
		<itemizedlist>
		    <listitem><para>Select the <code>File->Import</code> item.</para>
		    </listitem>
		    <listitem><para>Select an import method. For instance, <code>Grid approximation</code>.</para></listitem>
		</itemizedlist>
		Accept with the default parameters. 
		A graph with nodes and edges is now displayed. 
		With the mouse wheel, you can zoom on the graph to see a specific node. 
		By moving the mouse with the left button pressed, you can translate the graph in the plane of the view. 
		Pressing the <keycap>SHIFT</keycap> key allows to rotate the graph, and the <keycap>Ctrl</keycap> key (<keycap>Alt</keycap> on Mac) allows to rotate around the z axis and zoom. 
		In order to come back to the first and default point of view, Select <code>View->Center view</code> from the contextual menu.
		<itemizedlist>
		    <listitem><para>Select <code>Algorithm->Measure->Misc->Id</code> from the menu, to compute a value (metric) for each node and edge of the graph. </para></listitem>
		</itemizedlist>
		The graph is now displayed with colors depending on the metric. 
		You can change the colors with the menu : <code>Algorithm->Color->Metric Mapping</code>. 
		This plug-in allows you to choose any number of colors, and computes an interpolation to fill in the blanks if needed (or you can force colors to some values by using the enumerated mode).
                </para>
            </sect3>
            <sect3 id="create"><title>Creation of a graph</title>
                <para>In this section, we will learn how to create a new graph, element by element.
                <itemizedlist>
                    <listitem>
                        <para>Select <code>File->New</code> from the menu to create a new graph.</para>
                    </listitem>
                    <listitem>
                        <para>Create a graph by adding nodes and edges. 
			  To add a node, select the <inlinegraphic fileref="images/i_addnode.png"/> tool and click Where you want to add a node.
			  To add an edge, select the <inlinegraphic fileref="images/i_addedge.png"/> tool. 
			  Click on the source node, then on the target node. 
			  You can control whether to display or hide edges with the <code>Edges</code> visibility checkbox in the <code>Layer Manager</code> tab, located in the <code>View Editor</code> tab, in the left-hand dock.
			  Visibility checkboxes are in the first column, the second column contains stencil checkboxes (When one layer has the stencil, it is displayed on top of layers who do not have it).
			  There are several other checkboxes here, most notable are options to display or not nodes, node labels and edge labels.
			  In the same way, you can display or hide the arrows indicating the edge direction in the <code>Rendering Parameters> tab, by checking the <code>Arrows</code> checkbox in the <code>Edges</code> section.</para>
                    </listitem>
                    <listitem>
                        <para>To delete elements of the graph. Select the <inlinegraphic fileref="images/i_del.png"/> tool, then click on the element you want to delete.</para>
                    </listitem>
                </itemizedlist>
                </para>
            </sect3>
        </sect2>
	<sect2 id="save"><title>Saving</title>
	  <para>To save your work, you just have to select <code>File->Save</code> or <code>File->Save as</code>.
	    A dialog will appear allowing to enter the author of the graph and some comments; then after clicking on the 'OK' button, type the file name and choose its location.</para>
	  <para>The second way to save is to export the graph in one of the formats Tulip supports. 
	    By default, only GML and TLP exports are installed. 
	    To install more, look at the <code>Plug-ins Management</code> section of this help.
	    Select <code>File->Export</code> and the format of your choice, then choose the file name and location.</para>
	</sect2>
        <sect2 id="algos"><title>Algorithms</title>
	    <para>This part explains how to apply an algorithm to a graph. 
	      You need an open graph to apply an algorithm on (you can create or import one).
	      All the algorithms you can apply on graphs are located in the <code>Algorithm</code> menu.
	      There are Layout algorithms, Measures, Selection, Clustering (in <code>General</code>) and more !
	      For instance, select a layout algorithm by navigating to <code>Algorithm->Layout</code>, and then select <code>Hierarchical->Hierarchical Graph</code>.</para>
            <para>this algorithm deals with the layout of the nodes and the edges. 
	      Some <code>layout</code> algorithms may not apply to your graph if it does not belong to the right category of graphs. 
	      Trying to apply the <code>Bubble Tree</code> to a grid is not possible, as this algorithms needs a tree-like graph to be applied.
	      In these cases, a pop-up message will display an explanation of the problem.</para>
	</sect2>
    </sect1>
    <sect1 id="improve-layout"><title>Improving a layout</title>
    	<sect2 id="improve-layout-intro"><title>Introduction</title>
    		<para>In this tutorial, we will show you how to use layouts algorithms and graph properties to obtain a nice an clear graph. 
		  To do so, we will first import a file system structure, and then use the graph properties to find specific files. (*.cpp, *.hpp, ...)</para>
    	</sect2>
    	<sect2 id="improve-layout-import"><title>File system import</title>
    		<para>To create a graph from a file system, we have to select the <code>File System Directory</code> import tool which is in the <code>File->Import->Misc</code> menu.
    		</para>
    		<para>A "file browser dialog" will pop-up for you to select the root directory from which to create the graph. 
		  On this dialog, you just need to select a directory, e.g. Home (On Windows : My Documents).
		  Each folder and file will be represented as a node, and an edge will link a node to its parent folder.
    		</para>
    		<para>
    			The import plug-in will work for some time, and a tree graph will appear representing the chosen file system.
    		</para>
    		<graphic fileref="images/tutorials_improvelayout_1.png" />
     	<remark>To follow the rest of this tutorial you need to download and load (<code>File->Open</code>) this tulip compressed graph file : <ulink url="http://www.labri.fr/perso/auber/projects/tulip/samples/filesystem.tlp.gz">Graph</ulink>.</remark>
     	</sect2>
     	<sect2 id="improve-layout-newlayout"><title>Using other Layouts</title>
     		<sect3 id="tuto-Bubble-Tree-layout"><title><code>Bubble Tree Layout</code> :</title>
     			<para>This layout algorithm can be found in the menu <code>Algorithm->Layout->Tree</code>.
     			The bubble tree layout is very useful to notice directories that have a similar structure.
     			In this section, we will try to locate those directories.</para>
			<para>To have a better view on the tree, we will create a new Node Link Diagram View. <code>View->Node Link Diagram View</code>. 
			  When the new view is created, we need to re-organize the windows. <code>Windows->Tile </code></para>
     			<para>Now that we can see both views at the same time, we will zoom in on the right window.
			  Select the magnifying glass tool, and draw a bounding box on the left side of the graph. Just like this :</para>
     			<graphic fileref="images/tutorials_improvelayout_bubble_1.png" />
			<para>As you can see, two nodes looks very alike. By using the <code>Get Information</code> tool, we can get their ids : Node 1965 and node 2009. 
			It makes sense that these two directories have the same structure, since they both contain plug-ins source files.</para>
     			<para>We will now re-center the view (<code>View->Center View</code> or <keycap>Ctrl+Shift+C</keycap>). </para>
			<para>Let's say that we now want to study our graph without the plug-in directory. 
			  To easily delete the whole directory, we have to select it, and then select all its sub directories.</para>
			<itemizedlist>
				<listitem>
					<para>Select the plug-in directory : Use the Find tool, (<code>Edit->Find</code> or <keycap>Ctrl+F</keycap>) with the field <code>Input property</code> set to "name", filter function set to "=" and filter value set to "plugins".</para>
				</listitem>
				<listitem>
					<para>Select all its sub-directories : Use the <code>Algorithm->Selection->Reachable Sub-Graph</code> algorithm with the field distance set to 50. </para>
				</listitem>
				<listitem>
					<para>Delete all the selection : press <keycap>Del</keycap></para>
				</listitem>
				<listitem>
					<para>Re-run the bubble layout <code>Algorithm->Layout->Tree->Bubble Tree</code>.</para>
				</listitem>
			</itemizedlist>
			<para>Following is what you should see :</para>
			<graphic fileref="images/tutorials_improvelayout_bubble_2.png" />
     			
     		<para>As you can see, the bubble tree layout can be quite useful.</para>
     		</sect3>
     		<sect3 id="improve-layout-treemap"><title><code>The Tree Map layout</code></title>
     		<para>This Layout algorithm can be found in <code>Algorithm->Layout->Tree</code>.
     		      The treemap layout is very useful to notice large disk usage files.
     		      This section will show you how to use the tree map layout</para>
		      <para>First, make sure that the <code>Options -> Force Ratio</code> item is not checked.</para>
     		<para>Apply the layout algorithm <code>Algorithm->Layout->Tree->Squarified Tree Map</code> with the following parameters :
     		</para>
     			<itemizedlist>
     				<listitem><para>Metric : set to "size".
     				</para></listitem>
     				<listitem><para>Aspect Ratio : set to 1
     				</para></listitem>
     				<listitem><para>TreeMap Type? : checked
     				</para></listitem>
     			</itemizedlist>
     		 <para>Following is what you should see :</para>
     		<graphic fileref="images/tutorials_improvelayout_treemap_1.png" />
     		<para>As you can see, we easily get a global information on the size of files. 
		  Which is the biggest and which is the smallest. 
		  But we can also see the structure of directories, since files and directories are nested nodes. 
		  See <ulink url="http://en.wikipedia.org/wiki/Tree_map">Wikipedia : Tree Maps </ulink> for more information. </para>
     		</sect3>
     		<sect3 id="improve-layout-improvewalker"><title><code> Improved Walker layout </code>:</title>
     		<para> This layout can be found in the <code>Algorithm->Layout->Tree->Improved Walker</code>.</para>
     		<para>Use the following parameters :</para>
     		<itemizedlist>
     			<listitem><para>Node Size : viewSize
     			</para></listitem>
     			<listitem><para>Orientation : Left to right.
     			</para></listitem>
     			<listitem><para>Orthogonal : Checked.
     			</para></listitem>
     			<listitem><para>Layer Spacing : Default value.
     			</para></listitem>
     			<listitem><para>Node Spacing : Default Value.
     			</para></listitem>
     		</itemizedlist>
     		<para>You should see a tree looking like this :</para>
     		<graphic fileref="images/tutorials_improvelayout_2.png" />
     		
     		<para>As you can see, the improved walker layout, is just a hierarchical layout. It is very useful in order to understand the tree structure of a file system.</para>
     		</sect3>
     	</sect2>
     	<sect2 id="improve-layout-labels"><title>Showing Labels</title>
	<para>First, navigate to the <code>View Editor</code> tab in the left-hand dock.
	  Then, go into the <code>Layer Manager</code> tab, and check the <code>Nodes Label</code> box in the first column.
     		<para>We will now try to add labels to the nodes. To do so, select the node property called "name" in the info editor window, click on the button <code>To Labels</code>.</para>
     		<para>You should now see a graph looking like that :</para>
     		<graphic fileref="images/tutorials_improvelayout_3.png" />
     		<para>As you can see, the labels don't fit in nodes and it is very hard to read the graph. 
		  To fix this go in the <code>Rendering Parameters</code> tab, and check the <code>Scale labels to fit node sizes</code> box.</para>
     		
     		<para>You should obtain something like this.</para>
     		<graphic fileref="images/tutorials_improvelayout_4.png" />
     		<para>By zooming in we can see the labels :</para>
     		<graphic fileref="images/tutorials_improvelayout_5.png" />
     		<para>If you want to display the big file (high disk space) with big nodes, use the <code>Algorithm->Size->Metric Mapping</code> algorithm with the parameter called "property" set to "size". </para>
     	</sect2>
     	<sect2 id="improve-layout-ext"><title>Showing a specific kind of file.</title>
     		<para>Now that our graph has a nice and clear layout, we would like to locate all of our Source files (*.cpp). To do so, we will use the Find tool (Edit->Find or <keycap>Ctrl+F</keycap>).</para>
     		<para>Use the following parameters :</para>
     		<itemizedlist>
     			<listitem><para>Input Property : name
     			</para></listitem>
     			<listitem><para>Filter :  filter function set to "=" and filter value set to ".*cpp or .*hpp". 
			  The filter supports regular expressions, and in regular expressions '.' means any character, and '*' means any number of times, so '.*' means any character, any number of times.
			  Not to be mistaken with wildcard characters. For more details on regular expressions, follow this link : <ulink url="http://en.wikipedia.org/wiki/Regular_expression">WikiPedia : Regex </ulink>
     			</para></listitem>
     			<listitem><para>Options : check the <code>Replace</code> radio button and select <code>On nodes</code>.
     			</para></listitem>
     		</itemizedlist>
     		<para>Now that our source files are selected, we will apply a different color to them.</para>
     		<para>In the info editor window, select the node property called "viewColor", check the <code>selected only</code> option. 
		Now that we only see the "viewColor" property of the selected nodes, click on the button <code>Set all</code> and choose the color that you want. (We chose green)</para>
     		<para>You should see a graph like the following :</para>
     		<graphic fileref="images/tutorials_improvelayout_6.png" />
     		<graphic fileref="images/tutorials_improvelayout_treemap_6.png" />
     	</sect2>
     	<sect2 id="improve-layout-conclusion"><title>Conclusion</title>
     		<para>As you have seen, tulip implements powerful layouts and tools, to make a complex graph into a simple and understandable one.</para>
     	</sect2>
    </sect1>
    <sect1 id="infovis"><title>People in InfoVis</title>
    	<sect2 id="people-in-infovis"><title>Analyzing an author</title>
    		<para>First, download and open this <ulink url="http://tulip.labri.fr/samples/GRCite.tlp.gz">tulip graph file</ulink>.</para>
    		<para>This graph represent the relations between authors, conferences and papers. To distinguish paper, conferences and authors, we will re-color them : </para>
    		<itemizedlist>
    			<listitem> <para>Select all papers : Press <keycap>Ctrl+F</keycap> to display the find tool. 
			  In the Input Property field, select the property "type". Set the filter to "=", and the filter value to '0', then click on the Find button.</para>
    			</listitem>
    			<listitem> <para>Re-color the nodes in red : Select the Property tab (in the Graph Editor tab in the left dock). 
			  Select the 'viewColor' property, and check the "selected only" option to only consider selected nodes.
			  Then, click on the "Set all" button to define a new color for these nodes (e.g. red).</para>
    			</listitem>
    		</itemizedlist>
		<para>To find a property more easily, you can enter the first letters of the property name in the text box just above the list of properties.</para>
    		<para>Repeat the actions above, for authors (type = 2 ) and conferences (type = 1) with other colors (e.g. blue and yellow).</para>
    		<para>You should obtain something like this :</para>
    		<graphic fileref="images/tutorials_peopleinfovis_1.png" />
    		<para><code>Select an author :</code></para>
    		<para>Let's look at a single author more closely, for instance George Robertson. 
		  First, let's select that node by hitting <keycap>Ctrl+F</keycap> for the find tool, choosing the "titleshort" property, the "=" as filtering function, and the regular expression "G.*Rob.*" as filter value. 
		  We can have a rough estimate of how connected he is by moving him away from the center of the graph temporarily.</para>
    		<para>Following is what you should get :</para>
    		<graphic fileref="images/tutorials_peopleinfovis_2.png" />
    		<para><code>Go deeper :</code></para>
    		<para>We then select <code>Algorithm->Selection->Reachable Sub-Graph</code>, leaving direction to 0 (outgoing edges), startingNodes to viewSelection (nodes selected, in our case simply Mr Robertson),
		  and a distance of 1. 
		  We then select <code>Edit->Create Subgraph</code> to save this selection for further manipulation, naming it "GR.1hop.outgoing". 
		  We then select this new subgraph in the hierarchy tab. 
		  We can deselect the nodes now, either using the selection interactor and clicking away from any node or edge, either by selection 'viewSelection' and setting all the values to false.
		  To render this graph readable, we will first apply the <code>Algorithm->Size->Auto Sizing</code> algorithm, then change the layout for <code>Algorithm->Layout->Hierarchical->Hierarchical Graph</code>. 
		    Now, this layout is better, but there is an even better one you can find on the Tulip plug-ins server (<code>Help->Plugins->LaBRI Universite Bordeaux 1->Layout->Sugiyama (OGDF)</code>). 
		    Once this is installed, you can find it in <code>Algorithm->Layout->Hierarchical->Sugiyama (OGDF)</code>
		  </para>
    		<para>We can see which papers were published first, as they are cited by the later ones.
		  Robertson has 11 papers referenced in this database. 
		  If we apply a coloring by the number of citations (<code>Algorithm->Color->Metric Mapping</code>, with field property set to "arityOut" ) 
		  we can clearly see that "Cone Trees" is his most influential work.</para>
    		<graphic fileref="images/tutorials_peopleinfovis_3.png" />
    		<para>We then return to the main graph, and make sure the Robertson node is away from the others.
		  We then select all the papers nodes by hitting <keycap>Ctrl+F</keycap> for the find tool, choosing the  type property, the "=" filter, and the value 0 for papers. 
		  We want to add Robertson and all the edges going from or to this node to our selection.
		  To do so, we need the selection tool, and by pressing the <keycap>Ctrl</keycap> key while drawing a rectangle encompassing the node and all of its edges, we add to our current selection.
		  We then save this selection to a new subgraph that we name GRCitesub.</para>
    		<graphic fileref="images/tutorials_peopleinfovis_4.png" />
    		<para>In the new subgraph, we then select the Robertson node. 
		  We use the <code>Algorithm->Selection->Reachable Sub-Graph</code> algorithm again, pick a depth of 2 to find all papers that cite a paper written by Robertson.
		    Now we want to remove any node or edge that is not selected. 
		    We can invert the selection (<code>Edit->Invert Selection</code> or <keycap>Ctrl + I</keycap>) and delete (<keycap>Del</keycap>) the resulting selection.
		    This leaves us with Robertson and all his papers, and the papers citing his papers.
		    Applying a hierarchical layout will look like the image below.</para>
    		<graphic fileref="images/tutorials_peopleinfovis_5.png" />
    	<para>You can now close this graph since we are going to use an other one for the following of this tutorial.
  	The next graph is similar to the this one but, has coauthorship edges linking authors who write papers together.
  	You can download <ulink url="http://tulip.labri.fr/samples/GRSC.tlp.gz">it</ulink> and open it in tulip.</para>
  	<para></para>
  	<para></para>
    	</sect2>
    	<sect2 id="sec"><title>What, if any, are the relationships between two or more or all researchers</title>
    		<sect3 id="FocusingonTwoAuthors"><title>Focusing on Two Authors</title>
    			<para>Here we focus on the relationship between two authors, in this case Robertson and Card.</para>
    			<para>To select them use the find tool, with, at the first time the regular expressions : "G.*Rob.*".
    			 And at  a  second time, the regular expression ".*Card.*" and the "add" option checked. 
    			 To move those selected nodes away from the main layout, use the "moving selection" tool. If you click on one of the node, you will be able to move both nodes at the same time.</para>
    				<graphic fileref="images/tutorials_peopleinfovis_6.png" />
    		 	<para>Select Card and Roberts at the same time ( Press <keycap>Shift</keycap> while clicking on a node). Select all their neighbors by applying the <code>Algorithm->Selection->Reachable Sub-Graph</code> algorithm with distance 1. Create a new Subgraph.</para>
    		 	<para>Following is a hierarchical layout of the neighborhood of all outgoing edges one hop away; that is, the publications and coauthors of the union of Card and Robertson.</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_7.png" />
    		 	<para>You can repeat those operations for Robertson only and Card only :</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_8.png" />
    		 	<para> The similarity of these final three images shows the very strong ties between these two authors.</para>
    		 <remark>You can now close this graph since we are going to use an other one for the following of this tutorial.
  		 The next graph is similar to the old one but, has links between author and conference by following links from author to paper, and from paper to conference. Then, delete papers.
  		 You can download <ulink url="http://tulip.labri.fr/samples/ConfAuth.tlp.gz">it</ulink> and open it in tulip.</remark>
    		 </sect3>
    		 <sect3 id="auth-conf"><title>Central Authors and Conferences: Overview</title>
    		       <para>To show the large-scale structure of this dataset, we colored Authors in green and conferences in blue with a GEM layout (<code>Algorithm->Layout->Force Directed->GEM</code>). We deleted all the papers nodes.</para>
    		       <graphic fileref="images/tutorials_peopleinfovis_9.png" />
    		       <para>By zooming in :</para>
    		       <graphic fileref="images/tutorials_peopleinfovis_10.png" />
    		       <para>We select only the large connected component (the big set of nodes) : Select a fiew nodes in the center of the component and run the "Reachable Subgraph" selection algorithm with distance set to 50. </para>  
    		       <para>Color the authors by the Strahler metric: Run the <code>Algorithm->Measure->Graph->Strahler</code> algorithm and then a <code>Algorithm->Color->Metric Mapping</code> algorithm.</para>
    		       <para>Finally, we color papers in white.</para> 
    		       <para> This layout, shows the branching structure of the dataset.</para>
    		       <graphic fileref="images/tutorials_peopleinfovis_11.png" />
    		       <para>To distinguish authors and conferences :</para>
    		       <para>Select all authors (nodes of type 2) and set their viewLabelColor property to red.</para>
    		       <graphic fileref="images/tutorials_peopleinfovis_12.png" />
    		 </sect3>
    		 <sect3 id="top-conf"><title>Central Authors and Conferences: Top Conferences</title>
    		 	<para>It is very simple to see top conferences since they are the ones where the number of authors is high. The Metric Degree will help us to highlight them (<code>Algorithm->Measure->Graph->Degree </code>). </para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_13.png" />
    		 </sect3>
    		  <sect3 id="top-auth"><title>Central Authors and Conferences: Top Authors</title>
    		 	<para>Run the <code>Algorithm->Measure->Graph->Strahler</code> algorithm to see strong ties between conferences and authors : </para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_14.png" />
    		 	<para>Then run the <code>Algorithm->General->Convolution</code>, the value of the "discretization" parameter should be near 30 to obtain 5 clusters ) (Picture 1) to obtain the following clusters (Picture 2):</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_21.png" />
    		 	<graphic fileref="images/tutorials_peopleinfovis_15.png" />
    		 	<para>The Strahler-Convolution clustering yields five clusters, according to increasing centrality. The first cluster is mostly yellow, and contains most of the data. The second cluster contains a next tier of 26 authors that have had a relatively strong impact. The third cluster contains a group of 7 influential authors (Chi, Bederson, Eick, Rao, Pirolli, Ward, and Brown), and the fourth cluster (Roth, Robertson, Keim, and Stasko) is yet more central. The fifth cluster is the single node of Mackinlay, and the last one is Card and Shneiderman. Our automatic clustering method clearly yields very believeable results in this case.
    		 	</para>
    		 <remark>In the last section, we will use an other graph. Please download <ulink url="http://tulip.labri.fr/samples/ConfAuthRecSmallWorld.tlp.gz">it</ulink> and open it in tulip.</remark>
    		 </sect3>
    		 <sect3 id="interauthor-cons"><title>Hierarchical Structure of Interauthor Connections</title>
    		 	<para>To be able to see the labels within metanode check the "metanode label" visible box in the Layers tab in <code>Rendering Parameters</code> dialog.</para>
    		 	<para>The clusters have been computed using the <code>Algorithm->General->Strength</code> clustering algorithm.</para>
    		 	<para>The overview image from the previous section, showing the graph of all authors and papers, is extremely cluttered. In the previous task we show one way to extricate more information, by finding the most important items via convolution clustering. Another clustering approach, small-worlds clustering, allows us to instead navigate through a hierarchical subdivision of the entire dataset. The simplified overview allows us to understand the graph's high level structure. The strength metric computes the number of cycles of length 3 and 4 passing through each edge, normalized by the maximum possible value. The first image shows the clustered dataset. Small-world navigation is useful when exploring an unfamiliar graph to quickly find the structure of complex components. The eccentricity metric (<code>Algorithm->Measure->Graph->Eccentricity</code>), which measures whether nodes are peripheral (here in yellow) or central (here in blue), guides us to complexity immediately. This metric is O(n^3), but the small-world decomposition simplifies the graph, making the computation tractable.
    		 	</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_16.png" />
    		 	<para> The picture shows zooming in towards the  node that has many blue lines leading to it.
    		 	</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_20.png" />
    		 	<para> We then jump inside that cluster (Select the metanode, Right Click, Go inside), which is itself a small-world graph.
    		 	</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_17.png" />
    		 	<para> We once again zoom towards the most central node with many blue edges, where we see a cluster that has the InfoVis 96 conference and all the authors who only published the infovis community in that year.
    		 	</para>
    		 	<graphic fileref="images/tutorials_peopleinfovis_18.png" />
    		 	<graphic fileref="images/tutorials_peopleinfovis_19.png" />
    		 	<para> We see this star shape small-world decomposition only for the InfoVis symposia, because of the nature of this dataset: it is only the InfoVis symposia that have a complete set of authors and papers available.</para>
    		 </sect3>
    	</sect2>
    </sect1>
</chapter>
